<?xml version="1.0" encoding="UTF-8"?>

<beans 	xmlns="http://www.springframework.org/schema/beans"
				xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				xsi:schemaLocation="http://www.springframework.org/schema/beans
													  http://www.springframework.org/schema/beans/spring-beans.xsd">												 
												 
    <!--  Mata-data에 인스턴스 생성, 관계 :: DI :: 등을 서술적 기술 -->
    
    <!-- Bean Container가 id값을 갖는 인스턴스 생성 및 소멸 관리 -->
    <bean id="diceA" class="spring.service.dice.impl.DiceAImpl"/>
    <bean id="diceB" class="spring.service.dice.impl.DiceBImpl"/>
    <bean id="diceC" class="spring.service.dice.impl.DiceCImpl"/>

	<!-- Bean Container가 id값을 갖는 인스턴스 생성 소멸을 관리 
		- IoC가 DI을 수행관리 -->
	<bean id="player01" class="spring.service.dice.play.Player02">
	<!-- 인스턴스생성 후 dice property(Filed) 에 diceA instance injection 
		Setter Injection :: player01.setDice(diceA)-->
		<property name="dice">
		<ref bean="diceA"/>
		</property>
	</bean>
	
	<!-- Bean Container가 id값을 갖는 인스턴스 생성 소멸을 관리 
		- IoC가 DI을 수행관리 -->
	<!-- instance생성 후 Setter Injection을 아래와 같이 Definition 가능 -->
	<bean id="player02" class="spring.service.dice.play.Player02">
	<property name="dice" ref="diceB"/>
	</bean>
	
	
	<!-- Bean Container가 id값을 갖는 인스턴스 생성 소멸을 관리 
		- IoC가 DI을 수행관리 -->
	<bean id="player03" class="spring.service.dice.play.Player02">
	<!--  instance생성 시 생성자를 이용 diceC를 인자로 전달.
		  Conttructor Injection :: new Player02(diceC) -->
		<constructor-arg>
			<ref bean="diceC" />
		</constructor-arg>	  
	</bean>
	
	<!-- Bean Container가 id값을 갖는 인스턴스 생성 소멸을 관리 
		- IoC가 DI을 수행관리 -->
	<!-- instance생성 후 Setter Injection을 아래와 같이 Definition 가능 -->
	<bean id="player04" class="spring.service.dice.play.Player02">
		<constructor-arg ref="diceA" />
	</bean>
		  
	
	
</beans>