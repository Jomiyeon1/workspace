// [1page]==================================
// [[문제1]
SELECT
TO_CHAR(hire_date,'MM')||'월' 월, count(*) 직원수
FROM employees
GROUP BY TO_CHAR(hire_date,'MM')
ORDER BY 월;


// [[문제2]

SELECT
d.department_name, e.first_name, e.salary
FROM employees e, departments d, (SELECT
								  max(salary) maxsal, department_id
								  FROM employees
								  GROUP BY department_id) vt
WHERE e.department_id = d.department_id AND
      e.department_id = vt.department_id AND
      e.salary = vt.maxsal;

//부서별 maxsalary
SELECT
max(salary) maxsal, department_id
FROM employees
GROUP BY department_id;


// [[문제3]
SELECT
d.department_name 부서명, max(salary) 최대급여, min(salary) 최소급여, ROUND(avg(salary)) 평균급여
FROM employees e, departments d
WHERE d.department_id = e.department_id
GROUP BY d.department_name
HAVING ROUND(avg(salary)) > (SELECT
							 ROUND(avg(salary)) ITAVG
							 FROM employees e, departments d
							 WHERE d.department_id = e.department_id
							 GROUP BY d.department_name
							 HAVING d.department_name IN 'IT') AND
		ROUND(avg(salary)) < (SELECT
							  ROUND(avg(salary)) SalesAVG
							  FROM employees e, departments d
							  WHERE d.department_id = e.department_id
							  GROUP BY d.department_name
							  HAVING d.department_name IN 'Sales');


SELECT
ROUND(avg(salary)) ITAVG
FROM employees e, departments d
WHERE d.department_id = e.department_id
GROUP BY d.department_name
HAVING d.department_name IN 'IT';

SELECT
ROUND(avg(salary)) SalesAVG
FROM employees e, departments d
WHERE d.department_id = e.department_id
GROUP BY d.department_name
HAVING d.department_name IN 'Sales';


// [[문제4]
SELECT
NVL(d.department_name,'<신생부서>') 부서명, COUNT(*) 직원수
FROM departments d, employees e
WHERE e.department_id = d.department_id(+)
GROUP BY d.department_name
HAVING COUNT(*) = 1
ORDER BY 부서명 DESC;


//[2page]==================================
// [문제1]
SELECT
d.department_name 부서명, TO_CHAR(e.hire_date,'MM') 입사월, COUNT(*) 직원수
FROM employees e, departments d
WHERE d.department_id = e.department_id
GROUP BY d.department_name, TO_CHAR(e.hire_date,'MM')
HAVING COUNT(*) > 4
ORDER BY 부서명;

// [문제2]
SELECT
NVL(c.country_name,'<부서없음>') 국가명, NVL(l.city,'<부서없음>') 도시명,count(*) 직원수
FROM employees e, departments d, locations l, countries c
WHERE e.department_id = d.department_id(+) AND
	  d.location_id = l.location_id(+) AND
	  l.country_id = c.country_id(+)
GROUP BY c.country_name, l.city;

// [문제3]

SELECT
e.employee_id 직원아이디, e.first_name 이름, e.salary 급여, vt2.davg 부셔평균
FROM employees e, (SELECT
                    d.department_id 부서번호, max(e.salary) maxsal
                    FROM employees e, departments d
                    WHERE e.department_id = d.department_id
                    GROUP BY d.department_id) vt,					
					(SELECT
					d.department_id 부서번호2, ROUND(avg(e.salary),2) davg
					FROM employees e, departments d
					WHERE e.department_id = d.department_id
					GROUP BY d.department_id) vt2					
WHERE e.department_id = vt.부서번호 AND
	  e.department_id = vt2.부서번호2 AND
	  vt.maxsal = salary
ORDER BY e.employee_id;


// [문제4]
//[4-1 SALGRADE 테이블 생성 / 데이터 INSERT]
CREATE TABLE salgrade(
	grade	NUMBER(2) 	PRIMARY KEY,
	losal	NUMBER(5)	NOT NULL,
	hisal	NUMBER(5)	NOT NULL
);

INSERT INTO salgrade VALUES (1,1000,5000);
INSERT INTO salgrade VALUES (2,5001,10000);
INSERT INTO salgrade VALUES (3,10001,20000);
INSERT INTO salgrade VALUES(4,20001,30000);

//[4-2 급여등급별 직원수 출력]
SELECT
s.grade||'등급' 급여등급, count(*) 직원수
FROM employees e, salgrade s
WHERE e.salary BETWEEN s.losal AND s.hisal
GROUP BY s.grade
ORDER BY 급여등급;

// [3page]==================================
//[문제1]

SELECT
NVL(TO_CHAR(TRUNC(e.commission_pct,1),'FM99.99'), '<커미션없음>') 커미션, COUNT(*) 직원수
FROM employees e
GROUP BY TO_CHAR(TRUNC(e.commission_pct,1),'FM99.99')
ORDER BY TO_CHAR(TRUNC(e.commission_pct,1),'FM99.99') DESC;

//[문제2]

SELECT
부서명, 직원명, 급여, 커미션
FROM (SELECT
d.department_name 부서명, e.first_name 직원명, e.salary 급여, e.commission_pct 커미션
FROM employees e, departments d
WHERE d.department_id = e.department_id AND e.commission_pct IS NOT NULL
ORDER BY 커미션 DESC, 급여 DESC)
where rownum < 5;






//[문제3]